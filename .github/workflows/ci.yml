name: Ice Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [20.x] # Test against Node.js versions
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for nx affected commands and git tag history

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Cache npm dependencies

    - name: Install dependencies
      run: npm ci

    - name: Lint packages
      run: npx nx affected --target=lint

    - name: Run Unit Tests
      run: npx nx affected --target=test

    - name: Build all packages
      run: npm run build

    - name: Run Integration Tests (ice-build)
      run: npm run test:integration --workspace=@n8d/ice-build
      env:
        CI_PLATFORM: ${{ runner.os }}

    - name: Run Integration Tests (ice-hotreloader)
      run: npm run test:integration --workspace=@n8d/ice-hotreloader
      env:
        CI_PLATFORM: ${{ runner.os }}

    - name: Verify Windows-Specific Path Normalization
      if: runner.os == 'Windows'
      run: |
        echo "Verifying Windows-specific path normalization..."
        cd ice-build
        npx vitest run path-utils

    - name: Verify macOS/Linux-Specific Path Handling
      if: runner.os != 'Windows'
      run: |
        echo "Verifying macOS/Linux-specific path handling..."
        cd ice-build
        npx vitest run path-utils
